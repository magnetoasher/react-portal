apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "portal.fullname" . }}
  labels:
{{ include "portal.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  # https://blog.sebastian-daschner.com/entries/zero-downtime-updates-kubernetes
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "portal.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "portal.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.image.tag }}
    spec:
      {{- if .Values.imageCredentials.enabled }}
      imagePullSecrets:
      - name: {{ .Values.imageCredentials.name }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["start:sync"]
          ports:
            - name: microsvc
              containerPort: {{ .Values.PORT | default 4222 }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #     {{- if .Values.tls.enabled }}
          #     scheme: HTTPS
          #     {{ else }}
          #     scheme: HTTP
          #     {{- end }}
          #   initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          #   timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          #   successThreshold: {{ .Values.livenessProbe.successThreshold }}
          #   failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: http
          #     {{- if .Values.tls.enabled }}
          #     scheme: HTTPS
          #     {{ else }}
          #     scheme: HTTP
          #     {{- end }}
          #   initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          #   periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          #   timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          #   successThreshold: {{ .Values.readinessProbe.successThreshold }}
          #   failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          env:
            - name: PORT
              value: {{ .Values.PORT | default "4222" | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: configmap
              mountPath: /portal
      volumes:
        - name: configmap
          configMap:
            name: portal-configmap
            items:
              - key: .env
                path: .env
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
