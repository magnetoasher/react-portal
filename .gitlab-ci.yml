stages:
  - bundle
  - test
  - build
  - production
  - deploy

variables:
  PRODUCTION_NAMESPACE: default
  # DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  PRODUCTION_NAMESPACE: production
  PREFIX: kngk
  RELEASE_NAME: ${PREFIX}-${CI_PROJECT_NAME}
  CONTAINER_IMAGE: ${PREFIX}-${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${PREFIX}-${CI_PROJECT_NAME}:latest

before_script:
  - cp --remove-destination "${ENVIRONMENT_VARIABLES}" .env
  - cp --remove-destination "${JWT_PRIVATE_PEM}" jwt.private.pem
  - cp --remove-destination "${JWT_PUBLIC_PEM}" jwt.public.pem

bundle:
  image: node:12
  stage: bundle
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    untracked: true
    policy: pull-push
  script:
    - yarn install --production=false
    - npx next telemetry --disable

test:
  image: node:12
  stage: test
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  script:
    - yarn test -u

build:
  image: node:12
  stage: build
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  script:
    - yarn build
  artifacts:
    paths:
      - .nest/
      - .next/
    expire_in: 3 hours

production:
  image: docker:latest
  stage: production
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  script:
    - ls -la
    - docker build --tag ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}

deploy:
  image: dtzar/helm-kubectl
  stage: deploy
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  before_script:
    - helm init --client-only
  script:
    - export DEPLOYS=$(helm ls ${RELEASE_NAME} | wc -l)
    - if [ ${DEPLOYS} -eq 0 ]; then helm install --replace --namespace=${PRODUCTION_NAMESPACE} --name=${RELEASE_NAME} --debug helm/kngk-portal; else helm upgrade --install --namespace=${PRODUCTION_NAMESPACE} --debug ${RELEASE_NAME} helm/kngk-portal; fi
