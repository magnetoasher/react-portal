stages:
  - test_build
  - production
  - deploy

variables:
  PRODUCTION_NAMESPACE: default
  DOCKER_DRIVER: overlay2
  PRODUCTION_NAMESPACE: production
  PREFIX: ""
  RELEASE_NAME: ${PREFIX}${CI_PROJECT_NAME}
  RELEASE_NAME_SYNCH: ${PREFIX}${CI_PROJECT_NAME}-synch
  RELEASE_NAME_SOAP1C: ${PREFIX}${CI_PROJECT_NAME}-soap1c
  CONTAINER_IMAGE: ${PREFIX}${CI_PROJECT_NAME}:${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${PREFIX}${CI_PROJECT_NAME}:latest

test_build:
  image: node:13
  stage: test_build
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
      - apps/portal/.next/cache/
  script:
    - env && echo -n "node version " && node -v && yarn install --production=false
    - cd apps/portal && npx next telemetry status && npx next telemetry disable && cd ../..
    - ./entrypoint.sh test -u
    - time yarn build
    - time yarn build:synch
    - time yarn build:soap1c
  artifacts:
    paths:
      - .next/
      - dist
    expire_in: 16 hours

prepare:
  image: node:13
  stage: test_build
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
  script:
    - env && echo -n "node version " && node -v && yarn install --production=true

production:
  image: docker:latest
  stage: production
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
    policy: pull
  script:
    - |
      \
      if [ ! -d "node_modules" ]; then echo '!! CACHE NOT EXIST !!'; exit SIGINT; fi
    # TODO: авторизация по логину, пока нету, так что у нас в открытом доступе по docker-registry.kngk.org лежит куча portal-ов
    # - docker login
    - docker build --tag ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker tag ${CONTAINER_IMAGE} ${DOCKER_REGISTRY}/${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} ${DOCKER_REGISTRY}/${CONTAINER_IMAGE_LATEST}
    - docker push ${DOCKER_REGISTRY}/${CONTAINER_IMAGE}

deploy:
  image: dtzar/helm-kubectl:latest
  stage: deploy
  dependencies: []
  when: manual
  allow_failure: false
  script:
    - env
    # Portal
    - |
      helm upgrade ${RELEASE_NAME} helm/portal \
        --install --namespace=${PRODUCTION_NAMESPACE} \
        --debug --values helm/portal/values.yaml \
        --set HOST="${HOST}" \
        --set PORT="${PORT}" \
        --set PORT_DEBUGGER="${PORT_DEBUGGER}" \
        --set DATABASE_CONNECTION="${DATABASE_CONNECTION}" \
        --set DATABASE_HOST="${DATABASE_HOST}" \
        --set DATABASE_PORT="${DATABASE_PORT}" \
        --set DATABASE_USERNAME="${DATABASE_USERNAME}" \
        --set DATABASE_PASSWORD="${DATABASE_PASSWORD}" \
        --set DATABASE_DATABASE="${DATABASE_DATABASE}" \
        --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
        --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
        --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
        --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
        --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
        --set DATABASE_CACHE="${DATABASE_CACHE}" \
        --set DATABASE_REDIS_HOST="${DATABASE_REDIS_HOST}" \
        --set DATABASE_REDIS_PORT="${DATABASE_REDIS_PORT}" \
        --set DATABASE_REDIS_PASSWORD="${DATABASE_REDIS_PASSWORD}" \
        --set DATABASE_REDIS_TTL="${DATABASE_REDIS_TTL}" \
        --set DATABASE_REDIS_DB="${DATABASE_REDIS_DB}" \
        --set HTTP_REDIS_HOST="${HTTP_REDIS_HOST}" \
        --set HTTP_REDIS_PORT="${HTTP_REDIS_PORT}" \
        --set HTTP_REDIS_DB="${HTTP_REDIS_DB}" \
        --set HTTP_REDIS_PASSWORD="${HTTP_REDIS_PASSWORD}" \
        --set HTTP_REDIS_PREFIX="${HTTP_REDIS_PREFIX}" \
        --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
        --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
        --set SESSION_REDIS_HOST="${SESSION_REDIS_HOST}" \
        --set SESSION_REDIS_PORT="${SESSION_REDIS_PORT}" \
        --set SESSION_REDIS_DB="${SESSION_REDIS_DB}" \
        --set SESSION_REDIS_PASSWORD="${SESSION_REDIS_PASSWORD}" \
        --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
        --set SESSION_SECRET="${SESSION_SECRET}" \
        --set LDAP_URL="${LDAP_URL}" \
        --set LDAP_BIND_DN="${LDAP_BIND_DN}" \
        --set LDAP_BIND_PW="${LDAP_BIND_PW}" \
        --set LDAP_SEARCH_BASE="${LDAP_SEARCH_BASE}" \
        --set LDAP_SEARCH_FILTER="${LDAP_SEARCH_FILTER}" \
        --set LDAP_SEARCH_GROUP="${LDAP_SEARCH_GROUP}" \
        --set LDAP_SEARCH_BASE_ALL_USERS="${LDAP_SEARCH_BASE_ALL_USERS}" \
        --set LDAP_SEARCH_FILTER_ALL_USERS="${LDAP_SEARCH_FILTER_ALL_USERS}" \
        --set LDAP_REDIS_HOST="${LDAP_REDIS_HOST}" \
        --set LDAP_REDIS_PORT="${LDAP_REDIS_PORT}" \
        --set LDAP_REDIS_DB="${LDAP_REDIS_DB}" \
        --set LDAP_REDIS_PASSWORD="${LDAP_REDIS_PASSWORD}" \
        --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
        --set MICROSERVICE_URL="${MICROSERVICE_URL}" \
        --set MICROSERVICE_USER="${MICROSERVICE_USER}" \
        --set MICROSERVICE_PASS="${MICROSERVICE_PASS}" \
        --set SOAP_URL="${SOAP_URL}" \
        --set SOAP_USER="${SOAP_USER}" \
        --set SOAP_PASS="${SOAP_PASS}" \
        --set NEWS_URL="${NEWS_URL}" \
        --set NEWS_API_URL="${NEWS_API_URL}" \
        --set MAIL_URL="${MAIL_URL}" \
        --set MAIL_LOGIN_URL="${MAIL_LOGIN_URL}" \
        --set MEETING_URL="${MEETING_URL}" \
        --set image.repository="${DOCKER_REGISTRY}/${RELEASE_NAME}" \
        --set image.tag="${CI_BUILD_REF}"
    # Portal-synch
    - |
      helm upgrade ${RELEASE_NAME_SYNCH} helm/portal-synch \
        --install --namespace=${PRODUCTION_NAMESPACE} \
        --debug --values helm/portal-synch/values.yaml \
        --set HOST="${HOST}" \
        --set PORT="${PORT_MICROSERVICE}" \
        --set PORT_DEBUGGER="${PORT_DEBUGGER}" \
        --set image.repository="${DOCKER_REGISTRY}/${RELEASE_NAME}" \
        --set image.tag="${CI_BUILD_REF}"
    # Portal-soap1c
    - |
      helm upgrade ${RELEASE_NAME_SOAP1C} helm/portal-soap1c \
        --install --namespace=${PRODUCTION_NAMESPACE} \
        --debug --values helm/portal-soap1c/values.yaml \
        --set HOST="${HOST}" \
        --set PORT="${PORT_MICROSERVICE}" \
        --set PORT_DEBUGGER="${PORT_DEBUGGER}" \
        --set image.repository="${DOCKER_REGISTRY}/${RELEASE_NAME}" \
        --set image.tag="${CI_BUILD_REF}"
