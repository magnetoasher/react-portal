stages:
  - test_build
  - production
  - deploy

variables:
  PRODUCTION_NAMESPACE: default
  DOCKER_DRIVER: overlay2
  PRODUCTION_NAMESPACE: production
  PREFIX: ""
  RELEASE_NAME: ${PREFIX}${CI_PROJECT_NAME}
  CONTAINER_IMAGE: ${PREFIX}${CI_PROJECT_NAME}:${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${PREFIX}${CI_PROJECT_NAME}:latest

test_build:
  image: node:12
  stage: test_build
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
  before_script:
    - cp --remove-destination "${JWT_PRIVATE_PEM}" jwt.private.pem && cp --remove-destination "${JWT_PUBLIC_PEM}" jwt.public.pem
  script:
    - yarn install --production=false
    - npx next telemetry disable
    - time ./entrypoint.sh test -u
    - time yarn build
  artifacts:
    paths:
      - .nest/
      - .next/
    expire_in: 16 hours

prepare:
  image: node:12
  stage: test_build
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
  script:
    - env
    - yarn install --production=true

production:
  image: docker:latest
  stage: production
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
    policy: pull
  before_script:
    - cp --remove-destination "${JWT_PRIVATE_PEM}" jwt.private.pem && cp --remove-destination "${JWT_PUBLIC_PEM}" jwt.public.pem
  # TODO: это все нужно сделать по-другому... но пока так, до 20 октября сделаю
  script:
    - |
      \
      if [ ! -d "node_modules" ]; then echo '!! CACHE NOT EXIST !!'; exit SIGINT; fi
    - docker build --tag ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker tag ${CONTAINER_IMAGE} ${DOCKER_REGISTRY}/${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} ${DOCKER_REGISTRY}/${CONTAINER_IMAGE_LATEST}
    # TODO: авторизация по логину, пока нету, так что у нас в открытом доступе по docker-registry.kngk.org лежит куча portal-ов
    # - docker login
    - docker push ${DOCKER_REGISTRY}/${CONTAINER_IMAGE}

deploy:
  image: dtzar/helm-kubectl
  stage: deploy
  dependencies: []
  when: manual
  allow_failure: false
  script:
    - time helm init --client-only
    - export DEPLOYS=$(helm ls ${RELEASE_NAME} | wc -l)
    - |
      if [ ${DEPLOYS} -eq 0 ]; then \
        helm install --namespace=${PRODUCTION_NAMESPACE} --name=${RELEASE_NAME} \
          --debug --values helm/portal/values.yaml \
          --set NODE_ENV="${NODE_ENV}" \
          --set HOST="${HOST}" \
          --set PORT="${PORT}" \
          --set PORT_DEBUGGER="${PORT_DEBUGGER}" \
          --set DATABASE_CONNECTION="${DATABASE_CONNECTION}" \
          --set DATABASE_HOST="${DATABASE_HOST}" \
          --set DATABASE_PORT="${DATABASE_PORT}" \
          --set DATABASE_USERNAME="${DATABASE_USERNAME}" \
          --set DATABASE_PASSWORD="${DATABASE_PASSWORD}" \
          --set DATABASE_DATABASE="${DATABASE_DATABASE}" \
          --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
          --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
          --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
          --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
          --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
          --set DATABASE_CACHE="${DATABASE_CACHE}" \
          --set LDAP_REDIS_HOST="${LDAP_REDIS_HOST}" \
          --set LDAP_REDIS_PORT="${LDAP_REDIS_PORT}" \
          --set LDAP_REDIS_DB="${LDAP_REDIS_DB}" \
          --set LDAP_REDIS_PASSWORD="${LDAP_REDIS_PASSWORD}" \
          --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
          --set HTTP_REDIS_HOST="${HTTP_REDIS_HOST}" \
          --set HTTP_REDIS_PORT="${HTTP_REDIS_PORT}" \
          --set HTTP_REDIS_DB="${HTTP_REDIS_DB}" \
          --set HTTP_REDIS_PASSWORD="${HTTP_REDIS_PASSWORD}" \
          --set HTTP_REDIS_PREFIX="${HTTP_REDIS_PREFIX}" \
          --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
          --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
          --set SESSION_SECRET="${SESSION_SECRET}" \
          --set SESSION_REDIS_HOST="${SESSION_REDIS_HOST}" \
          --set SESSION_REDIS_PORT="${SESSION_REDIS_PORT}" \
          --set SESSION_REDIS_DB="${SESSION_REDIS_DB}" \
          --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
          --set LDAP_URL="${LDAP_URL}" \
          --set LDAP_BIND_DN="${LDAP_BIND_DN}" \
          --set LDAP_BIND_PW="${LDAP_BIND_PW}" \
          --set LDAP_SEARCH_BASE="${LDAP_SEARCH_BASE}" \
          --set LDAP_SEARCH_FILTER="${LDAP_SEARCH_FILTER}" \
          --set image.repository="${DOCKER_REGISTRY}/${RELEASE_NAME}" \
          --set image.tag="${CI_BUILD_REF}" \
          helm/portal; \
      else \
        helm upgrade --install --namespace=${PRODUCTION_NAMESPACE} \
          --debug --values helm/portal/values.yaml \
          --set NODE_ENV="${NODE_ENV}" \
          --set HOST="${HOST}" \
          --set PORT="${PORT}" \
          --set PORT_DEBUGGER="${PORT_DEBUGGER}" \
          --set DATABASE_CONNECTION="${DATABASE_CONNECTION}" \
          --set DATABASE_HOST="${DATABASE_HOST}" \
          --set DATABASE_PORT="${DATABASE_PORT}" \
          --set DATABASE_USERNAME="${DATABASE_USERNAME}" \
          --set DATABASE_PASSWORD="${DATABASE_PASSWORD}" \
          --set DATABASE_DATABASE="${DATABASE_DATABASE}" \
          --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
          --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
          --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
          --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
          --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
          --set DATABASE_CACHE="${DATABASE_CACHE}" \
          --set LDAP_REDIS_HOST="${LDAP_REDIS_HOST}" \
          --set LDAP_REDIS_PORT="${LDAP_REDIS_PORT}" \
          --set LDAP_REDIS_DB="${LDAP_REDIS_DB}" \
          --set LDAP_REDIS_PASSWORD="${LDAP_REDIS_PASSWORD}" \
          --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
          --set HTTP_REDIS_HOST="${HTTP_REDIS_HOST}" \
          --set HTTP_REDIS_PORT="${HTTP_REDIS_PORT}" \
          --set HTTP_REDIS_DB="${HTTP_REDIS_DB}" \
          --set HTTP_REDIS_PASSWORD="${HTTP_REDIS_PASSWORD}" \
          --set HTTP_REDIS_PREFIX="${HTTP_REDIS_PREFIX}" \
          --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
          --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
          --set SESSION_SECRET="${SESSION_SECRET}" \
          --set SESSION_REDIS_HOST="${SESSION_REDIS_HOST}" \
          --set SESSION_REDIS_PORT="${SESSION_REDIS_PORT}" \
          --set SESSION_REDIS_DB="${SESSION_REDIS_DB}" \
          --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
          --set LDAP_URL="${LDAP_URL}" \
          --set LDAP_BIND_DN="${LDAP_BIND_DN}" \
          --set LDAP_BIND_PW="${LDAP_BIND_PW}" \
          --set LDAP_SEARCH_BASE="${LDAP_SEARCH_BASE}" \
          --set LDAP_SEARCH_FILTER="${LDAP_SEARCH_FILTER}" \
          --set image.repository="${DOCKER_REGISTRY}/${RELEASE_NAME}" \
          --set image.tag="${CI_BUILD_REF}" \
          ${RELEASE_NAME} helm/portal; \
      fi
