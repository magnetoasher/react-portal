stages:
  - bundle
  - test
  - build
  - production
  - deploy

variables:
  PRODUCTION_NAMESPACE: default
  DOCKER_DRIVER: overlay2
  PRODUCTION_NAMESPACE: production
  PREFIX:
  RELEASE_NAME: ${PREFIX}${CI_PROJECT_NAME}
  CONTAINER_IMAGE: ${PREFIX}${CI_PROJECT_NAME}:${CI_BUILD_REF_NAME}_${CI_BUILD_REF}
  CONTAINER_IMAGE_LATEST: ${PREFIX}${CI_PROJECT_NAME}:latest

bundle:
  image: node:10
  stage: bundle
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    # untracked: true
    policy: pull-push
  script:
    - yarn install --production=false

test:
  image: node:10
  stage: test
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  script:
    - yarn test -u

build:
  image: node:10
  stage: build
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  script:
    - npx next telemetry --disable
    - yarn build
  artifacts:
    paths:
      - .nest/
      - .next/
    expire_in: 3 hours

production:
  image: docker:latest
  stage: production
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - node_modules/
    policy: pull
  before_script:
    - cp --remove-destination "${JWT_PRIVATE_PEM}" jwt.private.pem
    - cp --remove-destination "${JWT_PUBLIC_PEM}" jwt.public.pem
  script:
    - docker images ${RELEASE_NAME}
    - docker build --tag ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE_LATEST}
    - docker images ${RELEASE_NAME}

deploy:
  image: dtzar/helm-kubectl
  stage: deploy
  dependencies: []
  script:
    - helm init --client-only
    - export DEPLOYS=$(helm ls ${RELEASE_NAME} | wc -l)
    - if [ ! ${DEPLOYS} -eq 0 ]; then helm del --purge ${RELEASE_NAME}; sleep 1; fi
    - if [ ${DEPLOYS} -eq 0 ]; then \
    - helm install --namespace=${PRODUCTION_NAMESPACE} --name=${RELEASE_NAME} \
    - --debug --values helm/portal/values.yaml helm/portal \
    - --set NODE_ENV=${NODE_ENV} \
    - --set HOST=${HOST} \
    - --set PORT=${PORT} \
    - --set PORT_DEBUGGER=${PORT_DEBUGGER} \
    - --set DATABASE_CONNECTION=${DATABASE_CONNECTION} \
    - --set DATABASE_HOST=${DATABASE_HOST} \
    - --set DATABASE_PORT=${DATABASE_PORT} \
    - --set DATABASE_USERNAME=${DATABASE_USERNAME} \
    - --set DATABASE_PASSWORD=${DATABASE_PASSWORD} \
    - --set DATABASE_DATABASE=${DATABASE_DATABASE} \
    - --set DATABASE_SCHEMA=${DATABASE_SCHEMA} \
    - --set DATABASE_SYNCHRONIZE=${DATABASE_SYNCHRONIZE} \
    - --set DATABASE_DROP_SCHEMA=${DATABASE_DROP_SCHEMA} \
    - --set DATABASE_MIGRATIONS_RUN=${DATABASE_MIGRATIONS_RUN} \
    - --set DATABASE_LOGGING=${DATABASE_LOGGING} \
    - --set DATABASE_CACHE=${DATABASE_CACHE} \
    - --set REDIS_HOST=${REDIS_HOST} \
    - --set REDIS_PORT=${REDIS_PORT} \
    - --set REDIS_DB=${REDIS_DB} \
    - --set REDIS_PASSWORD=${REDIS_PASSWORD} \
    - --set REDIS_PREFIX=${REDIS_PREFIX} \
    - --set SESSION_SECRET=${SESSION_SECRET} \
    - --set LDAP_URL=${LDAP_URL} \
    - --set LDAP_BIND_DN=${LDAP_BIND_DN} \
    - --set LDAP_BIND_PW=${LDAP_BIND_PW} \
    - --set LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE} \
    - --set LDAP_SEARCH_FILTER=${LDAP_SEARCH_FILTER} \
    - ; else \
    - helm upgrade --install --namespace=${PRODUCTION_NAMESPACE} \
    - --debug --values helm/portal/values.yaml ${RELEASE_NAME} helm/portal \
    - --set NODE_ENV=${NODE_ENV} \
    - --set HOST=${HOST} \
    - --set PORT=${PORT} \
    - --set PORT_DEBUGGER=${PORT_DEBUGGER} \
    - --set DATABASE_CONNECTION=${DATABASE_CONNECTION} \
    - --set DATABASE_HOST=${DATABASE_HOST} \
    - --set DATABASE_PORT=${DATABASE_PORT} \
    - --set DATABASE_USERNAME=${DATABASE_USERNAME} \
    - --set DATABASE_PASSWORD=${DATABASE_PASSWORD} \
    - --set DATABASE_DATABASE=${DATABASE_DATABASE} \
    - --set DATABASE_SCHEMA=${DATABASE_SCHEMA} \
    - --set DATABASE_SYNCHRONIZE=${DATABASE_SYNCHRONIZE} \
    - --set DATABASE_DROP_SCHEMA=${DATABASE_DROP_SCHEMA} \
    - --set DATABASE_MIGRATIONS_RUN=${DATABASE_MIGRATIONS_RUN} \
    - --set DATABASE_LOGGING=${DATABASE_LOGGING} \
    - --set DATABASE_CACHE=${DATABASE_CACHE} \
    - --set REDIS_HOST=${REDIS_HOST} \
    - --set REDIS_PORT=${REDIS_PORT} \
    - --set REDIS_DB=${REDIS_DB} \
    - --set REDIS_PASSWORD=${REDIS_PASSWORD} \
    - --set REDIS_PREFIX=${REDIS_PREFIX} \
    - --set SESSION_SECRET=${SESSION_SECRET} \
    - --set LDAP_URL=${LDAP_URL} \
    - --set LDAP_BIND_DN=${LDAP_BIND_DN} \
    - --set LDAP_BIND_PW=${LDAP_BIND_PW} \
    - --set LDAP_SEARCH_BASE=${LDAP_SEARCH_BASE} \
    - --set LDAP_SEARCH_FILTER=${LDAP_SEARCH_FILTER} \
    - ; fi
