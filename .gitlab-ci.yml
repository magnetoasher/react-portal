stages:
  - bundle
  # - test
  # - build
  - production
  - deploy

# services:
#   - postgres:11.5
#   - redis:5.0.5

variables:
  KUBECONFIG: /etc/kubernetes
  PRODUCTION_NAMESPACE: default
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2    

bundle:
  image: node:12
  stage: bundle
  script:
    - (! test -f /usr/local/bin/yarn) && npm install -g yarn
    - cp --remove-destination "${CI_ENVIRONMENT_VARIABLES}" .env
    - ls -la
    # - yarn
    - yarn jwt:cert
    - ls -la
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_PATH_SLUG}
    untracked: true
    policy: push
    paths:
      - node_modules/
  artifacts:
    paths:
      - .env
      - jwt.public.pem
      - jwt.private.pem
    expire_in: 12 hours

# test:
#   stage: test
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_PATH_SLUG}
#     untracked: true
#     paths:
#       - node_modules/
#     policy: pull
#   script:
#     - (! test -f /usr/local/bin/yarn) && npm install -g yarn
#     - yarn test -u

# build:
#   stage: build
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_PATH_SLUG}
#     untracked: true
#     paths:
#       - node_modules/
#     policy: pull
#   script:
#     - (! test -f /usr/local/bin/yarn) && npm install -g yarn
#     - yarn build
#   artifacts:
#     paths:
#       - .nest/
#       - .next/
#     expire_in: 12 hours

production:
  stage: production
  image: docker:latest
  services:
    - docker:dind
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_PATH_SLUG}
    untracked: true
    paths:
      - node_modules/
    policy: pull
  script:
    - docker build --cache-from $CI_PROJECT_NAME:latest --tag $CI_PROJECT_NAME:$CI_COMMIT_SHA --tag $CI_PROJECT_NAME:latest .

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_PROJECT_PATH_SLUG}
    untracked: true
    paths:
      - node_modules/
    policy: pull
  before_script:
    - mkdir -p /etc/deploy
    - cp --remove-destination "${CI_KUBELET_CONFIG}" "${KUBECONFIG}"
    - helm init --client-only
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com/
    - helm repo add incubator https://kubernetes-charts-incubator.storage.googleapis.com/
    - helm repo update
    - kubectl get pods --all-namespaces
  script:
    - ls -la
