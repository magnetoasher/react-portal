type TkService {
  where: String!
  code: String!
  name: String
  description: String
  avatar: String
}

type TkRoute {
  where: String!
  code: String!
  name: String
  description: String
  avatar: String
  services: [TkService!]
}

type TkUser {
  where: String!
  id: String
  name: String!
  login: String
  avatar: String
  email: String
  telephone: String
  company: String
  department: String
  division: String
  manager: String
  title: String
}

type TkFile {
  where: String!
  id: String!
  name: String
  ext: String
  mime: String
  body: String
}

type TkAuthorComments {
  users: [TkUser]
  comments: [TkComment]
}

type TkComment {
  where: String!
  date: Date
  authorLogin: String
  body: String
  task: String
  code: String
  parentCode: String
  files: [TkFile!]
}

type TkTask {
  where: String!
  id: String
  code: String!
  subject: String!
  body: String
  smallBody: String
  status: String!
  route: TkRoute
  service: TkService
  createdDate: Date
  endDate: Date
  timeoutDate: Date
  initiatorUser: String
  executorUser: String
  availableAction: String
  availableStages: String
  files: [TkFile!]
  comments: TkAuthorComments
}

type TkTaskNew {
  where: String!
  code: String!
  subject: String!
  route: String
  service: String!
  organization: String
  status: String
  createdDate: Date!
}

input TkTaskNewInput {
  where: String
  subject: String
  body: String
  # Route Id
  route: String
  #  Service Id
  service: String
  # Login
  executorUser: String
}

input TkTaskEditInput {
  where: String
  code: String
  comment: String
}

input TkTaskDescriptionInput {
  where: String
  code: String
}

input TkTasksInput {
  status: String
  find: String
}

type TkRoutes {
  routes: [TkRoute]
  errors: [String]
}

type TkEditTask {
  users: [TkUser]
  task: TkTask
  errors: [String]
}

type TkTasks {
  users: [TkUser]
  tasks: [TkTask]
  errors: [String]
}

input TkFileInput {
  where: String!
  ref: String!
}

type Query {
  TicketsRoutes: TkRoutes
  TicketsTasks(task: TkTasksInput!): TkTasks
  TicketsTaskDescription(task: TkTaskDescriptionInput!): TkEditTask
  TicketsTaskFile(id: TkFileInput!): TkFile
  TicketsCommentFile(id: TkFileInput!): TkFile
}

type Mutation {
  TicketsTaskNew(task: TkTaskNewInput!, attachments: [Upload]): TkTaskNew
  TicketsTaskEdit(task: TkTaskEditInput!, attachments: [Upload]): TkEditTask
}
