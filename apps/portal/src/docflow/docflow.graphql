type DocFlowUser {
  id: String!
  name: String
  presentation: String
}

type DocFlowState {
  id: String!
  name: String
  presentation: String
}

type DocFlowTarget {
  id: String!
  name: String
  presentation: String
}

type DocFlowFileList {
  id: String!
  name: String
  presentation: String
}

type DocFlowFile {
  id: String!
  name: String
  presentation: String
}

type DocFlowParentTask {
  id: String!
  name: String
  presentation: String
}

type DocFlowImportance {
  id: String!
  name: String
  presentation: String
}

type DocFlowTask {
  id: String!
  name: String
  presentation: String
  importance: DocFlowImportance
  executor: DocFlowUser
  executed: Boolean
  executionMark: String
  beginDate: Date
  dueDate: Date
  endDate: Date
  description: String
  parentTask: DocFlowParentTask
  processStep: String
  executionComment: String
  author: DocFlowUser!
  accepted: Boolean
  acceptDate: Date
  state: DocFlowState
  target: DocFlowTarget
  targets: [DocFlowTarget!]
}

input DocFlowTasksInput {
  cache: Boolean
}

input DocFlowTaskInput {
  cache: Boolean
}

input DocFlowTargetInput {
  documentID: String!
  cache: Boolean
}

input DocFlowFileListInput {
  documentID: String!
  cache: Boolean
}

input DocFlowFileVersionInput {
  file: String!
  cache: Boolean
}

type Query {
  docFlowTasks(tasks: DocFlowTasksInput): [DocFlowTask!]
  docFlowTask(task: DocFlowTaskInput): DocFlowTask!
  docFlowTarget(target: DocFlowTargetInput!): [DocFlowTarget!]
  docFlowFileList(files: DocFlowFileListInput): [DocFlowFileList!]
  docFlowFileVersion(file: DocFlowFileVersionInput!): DocFlowFile!
}

type Subscription {
  docFlowTasks(tasks: DocFlowTasksInput): [DocFlowTask!]
  docFlowTask(task: DocFlowTaskInput): DocFlowTask!
  docFlowTarget(target: DocFlowTargetInput!): [DocFlowTarget!]
}
