type Profile {
  id: ID

  loginService: String
  loginIdentificator: String
  dn: String

  username: String

  fullName: String

  firstName: String
  lastName: String
  middleName: String
  birthday: String
  gender: Int

  company: String
  title: String
  department: String
  otdel: String

  manager: Profile

  telephone: String
  workPhone: String
  fax: String
  mobile: String
  email: String

  # ИНН
  employeeID: String

  companyeng: String
  nameeng: String
  departmenteng: String
  otdeleng: String
  positioneng: String

  country: String
  postalCode: String
  region: String
  town: String
  street: String
  room: String

  disabled: Boolean
  notShowing: Boolean

  thumbnailPhoto: String
  thumbnailPhoto40: String

  createdAt: Date
  updatedAt: Date
}

enum ProfileOrderField {
  firstName
  lastName
  middleName
  fullName
  nameeng
  company
  companyeng
  department
  departmenteng
  otdel
  otdeleng
  title
  positioneng
  telephone
  mobile
  workPhone
  country
  region
  town
}

enum OrderDirection {
  ASC
  DESC
}

input ProfileOrder {
  direction: OrderDirection
  field: ProfileOrderField
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

type ProfileEdge {
  node: Profile
  cursor: String
}

type ProfileConnection {
  totalCount: Int
  edges: [ProfileEdge]
  pageInfo: PageInfo
}

input ProfileSettingsInput {
  id: ID

  firstName: String
  lastName: String
  middleName: String
  birthday: String
  gender: Int

  company: String
  title: String
  department: String
  otdel: String

  telephone: String
  workPhone: String
  fax: String
  mobile: String
  email: String

  companyeng: String
  nameeng: String
  departmenteng: String
  otdeleng: String
  positioneng: String

  country: String
  postalCode: String
  region: String
  town: String
  street: String
  room: String

  notShowing: Boolean
}

enum FieldSelection {
  company
  department
  otdel
  country
  region
  town
  street
  postalCode
}

type Query {

  profiles(first: Int, after: String, orderBy: ProfileOrder, search: String, disabled: Boolean, notShowing: Boolean): ProfileConnection!

  profile(id: ID): Profile

  searchSuggestions(search: String): [String]

  profileFieldSelection(field: FieldSelection): [String]

}

type Mutation {
  changeProfile(profile: ProfileSettingsInput, thumbnailPhoto: Upload): Profile
}
