/** @format */

module.exports = {
  parser: '@typescript-eslint/parser',
  plugins: [
    '@typescript-eslint',
    'babel',
    'react',
    'react-hooks',
    'standard',
    'graphql',
    'json',
    'jest',
    'promise',
    'unicorn',
    'eslint-comments',
  ],
  extends: [
    // 'standard',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
    'eslint:recommended',
    'plugin:jest/recommended',
    'plugin:prettier/recommended',
    'plugin:promise/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:unicorn/recommended',
    'prettier',
    'prettier/@typescript-eslint',
    'prettier/babel',
    'prettier/react',
    'prettier/standard',
    'prettier/unicorn',
  ],
  settings: {
    'react': {
      version: 'detect',
    },
    'import/resolver': {
      node: {
        extensions: ['.ts', '.tsx', '.js', '.jsx', '.json'],
      },
    },
    'import/ignore': ['.coffee$', '.(scss|less|css)$', '.(svg|png|jpe?g|webp|gif)(\\?*)$'],
  },
  globals: {
    window: true,
    document: true,
    process: true,
    __DEV__: true,
    __SERVER__: true,
  },
  parserOptions: {
    sourceType: 'module',
    jsx: true,
    useJSXTextNode: true,
    ecmaVersion: 2020,
    ecmaFeatures: {
      jsx: true,
    },
  },
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  rules: {
    'max-len': ['error', { code: 120, ignoreUrls: true }],
    'no-unused-vars': [
      'warn',
      {
        argsIgnorePattern: '^(_|[A-Z]+)',
        varsIgnorePattern: '^(_|[A-Z]+)',
      },
    ],
    'prettier/prettier': [
      'error',
      {
        parser: 'typescript',
        printWidth: 120,
        singleQuote: true,
        useTabs: false,
        tabWidth: 2,
        semi: true,
        bracketSpacing: true,
        trailingComma: 'all',
        arrowParens: 'always',
        insertPragma: true,
        quoteProps: 'consistent',
        jsxSingleQuote: false,
        jsxBracketSameLine: false,
        htmlWhitespaceSensivity: 'css',
        proseWrap: 'never',
      },
    ],
    'react/prop-types': 'off',
    'unicorn/no-null': 'off',
    'unicorn/no-reduce': 'off',
    '@typescript-eslint/no-empty-function': 'warn',
    '@typescript-eslint/no-explicit-any': 'warn',
    '@typescript-eslint/no-unused-vars': [
      'warn',
      {
        argsIgnorePattern: '^(_|[A-Z]+)',
        varsIgnorePattern: '^(_|[A-Z]+)',
      },
    ],
    'unicorn/prevent-abbreviations': [
      'error',
      {
        replacements: {
          ref: false,
          e2e: false,
          props: {
            properties: false,
          },
          ctx: {
            context: false,
          },
          ext: {
            extension: false,
          },
          src: {
            source: false,
          },
        },
      },
    ],
    '@typescript-eslint/no-var-requires': 0,
    // '@typescript-eslint/camelcase': 0,
    // '@typescript-eslint/naming-convention': 0,
    // 'react/jsx-props-no-spreading': 0,
    // // TODO: this is a bug
    // '@typescript-eslint/no-implied-eval': 0,
    // '@typescript-eslint/no-throw-literal': 0,
    // 'no-unused-expressions': ['error', { allowShortCircuit: true, allowTernary: true }],
    // 'no-confusing-arrow': ['error', { allowParens: true }],
    // '@typescript-eslint/no-object-literal-type-assertion': 0,
    // 'no-nested-ternary': 0,
    // 'no-useless-constructor': 0,
    // '@typescript-eslint/no-var-requires': 0,
    // 'no-param-reassign': 1,
    // 'class-methods-use-this': 0,
    // 'react-hooks/rules-of-hooks': 2,
    // 'react-hooks/exhaustive-deps': 1,
    // 'no-underscore-dangle': 0,
    // 'import/no-unresolved': 0,
    // 'global-require': 1,
    // 'no-plusplus': [
    //   2,
    //   {
    //     allowForLoopAfterthoughts: true,
    //   },
    // ],
    // // https://github.com/typescript-eslint/typescript-eslint/issues/1232
    // '@typescript-eslint/indent': [
    //   'off',
    //   2,
    //   {
    //     flatTernaryExpressions: false,
    //     ignoreComments: true,
    //     SwitchCase: 1,
    //     VariableDeclarator: {
    //       var: 2,
    //       let: 2,
    //       const: 3,
    //     },
    //     MemberExpression: 1,
    //     FunctionDeclaration: { parameters: 'first' },
    //     FunctionExpression: { parameters: 'first' },
    //     CallExpression: { arguments: 'first' },
    //     ArrayExpression: 1,
    //     ObjectExpression: 1,
    //     ImportDeclaration: 'first',
    //   },
    // ],
    // '@typescript-eslint/no-non-null-assertion': 0,
    // 'no-debugger': 1,
    // 'new-cap': 'off',
    // 'no-extra-boolean-cast': 0,
    // // 'indent': ['error'],
    // 'indent': 'off',
    // 'react/jsx-one-expression-per-line': 'off',
    // 'quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
    // 'import/no-extraneous-dependencies': [
    //   'error',
    //   {
    //     optionalDependencies: true,
    //   },
    // ],
    // 'spaced-comment': ['error', 'always', { markers: ['#region', '#endregion'] }],
    // 'import/extensions': 0,
    // 'react/forbid-prop-types': 'off',
    // 'no-var-requires': 'off',
    // 'arrow-body-style': 0,
    // 'dot-notation': 0,
    // 'no-console': 'off',
    // 'react/jsx-key': 0,
    // 'semi': ['error', 'always'],
    // 'react/sort-comp': 1,
    // 'no-prototype-builtins': 'off',
    // 'import/prefer-default-export': 'off',
    // 'import/no-default-export': 1,
    // 'react/destructuring-assignment': 'off',
    // 'react/jsx-filename-extension': 'off',
    // 'no-use-before-define': [
    //   'error',
    //   {
    //     functions: false,
    //     classes: true,
    //     variables: true,
    //   },
    // ],
    // '@typescript-eslint/explicit-function-return-type': [
    //   'warn',
    //   {
    //     allowExpressions: true,
    //     allowTypedFunctionExpressions: true,
    //   },
    // ],
    // '@typescript-eslint/no-empty-interface': 0,
    // 'react/no-unused-state': 1,
    // '@typescript-eslint/no-use-before-define': [
    //   'error',
    //   {
    //     functions: false,
    //     classes: true,
    //     variables: true,
    //     typedefs: true,
    //   },
    // ],
    // 'unicorn/prevent-abbreviations': 'off',
    // 'unicorn/filename-case': 0,
    // 'no-empty-function': 0,
    // 'no-empty-pattern': 0,
    // '@typescript-eslint/explicit-member-accessibility': 0,
    // '@typescript-eslint/no-parameter-properties': [
    //   'error',
    //   {
    //     allows: ['private readonly', 'public readonly'],
    //   },
    // ],
    // 'jsx-a11y/anchor-is-valid': [
    //   'error',
    //   {
    //     components: ['Link'],
    //     specialLink: ['hrefLeft', 'hrefRight'],
    //     aspects: ['invalidHref', 'preferButton'],
    //   },
    // ],
  },
};
